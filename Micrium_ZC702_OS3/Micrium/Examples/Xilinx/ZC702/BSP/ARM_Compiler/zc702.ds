#####
# DS-5 debugger startup script for the ZC702. Clock and DDR configuration taken from Xilinx EDK example
#####


memory 0xF8000000 +4096    noverify 32 # Configure the SLCR registers as noverify
memory 0XF8006000 +4096    noverify 32 # Configure the DDR registers as noverify
memory 0XE0000000 +0xF000  noverify 32

memory 0xE0100020 +4 na 32
memory AHB:0xE0100020 +4 na 32
memory 0xE0101020 +4 na 32
memory AHB:0xE0101020 +4 na 32

memory 0xE0008050 +4 na 32
memory AHB:0xE0008050 +4 na 32
memory 0xE0008054 +4 na 32
memory AHB:0xE0008054 +4 na 32
memory 0xE0008058 +4 na 32
memory AHB:0xE0008058 +4 na 32
memory 0xE000805C +4 na 32
memory AHB:0xE000805C +4 na 32

define  setmask  # helper function to perform RMW sequences  setmask addr mask val
 set *($arg0) =  ($arg2 & $arg1) | (*($arg0) & ~($arg1))
end


# Perform a system reset
reset system
pause 500

####
# MIO Configuration
####

set *0xF8000008U = 0x0000DF0DU # SLCR unlock

setmask 0xF8000B00U 0x00000303U 0x00000001U
setmask 0xF8000B40U 0x00000FFFU 0x00000600U
setmask 0xF8000B44U 0x00000FFFU 0x00000600U
setmask 0xF8000B48U 0x00000FFFU 0x00000672U
setmask 0xF8000B4CU 0x00000FFFU 0x00000672U
setmask 0xF8000B50U 0x00000FFFU 0x00000674U
setmask 0xF8000B54U 0x00000FFFU 0x00000674U
setmask 0xF8000B58U 0x00000FFFU 0x00000600U
setmask 0xF8000B5CU 0xFFFFFFFFU 0x00D6861CU
setmask 0xF8000B60U 0xFFFFFFFFU 0x00F9861CU
setmask 0xF8000B64U 0xFFFFFFFFU 0x00F9861CU
setmask 0xF8000B68U 0xFFFFFFFFU 0x00D6861CU
setmask 0xF8000B6CU 0x00007FFFU 0x00000E09U
setmask 0xF8000B70U 0x00000021U 0x00000021U
setmask 0xF8000B70U 0x00000021U 0x00000020U
setmask 0xF8000B70U 0x07FFFFFFU 0x00000823U
setmask 0xF8000700U 0x00003F01U 0x00001201U
setmask 0xF8000704U 0x00003FFFU 0x00001202U
setmask 0xF8000708U 0x00003FFFU 0x00000202U
setmask 0xF800070CU 0x00003FFFU 0x00000202U
setmask 0xF8000710U 0x00003FFFU 0x00000202U
setmask 0xF8000714U 0x00003FFFU 0x00000202U
setmask 0xF8000718U 0x00003FFFU 0x00000202U
setmask 0xF800071CU 0x00003F01U 0x00000200U
setmask 0xF8000720U 0x00003FFFU 0x00000202U
setmask 0xF8000724U 0x00003FFFU 0x00001200U
setmask 0xF800072CU 0x00003F01U 0x00001200U
setmask 0xF8000730U 0x00003FFFU 0x00001200U
setmask 0xF8000734U 0x00003F01U 0x00001200U
setmask 0xF8000738U 0x00003FFFU 0x00001200U
setmask 0xF800073CU 0x00003F01U 0x00001201U
setmask 0xF8000770U 0x00003FFFU 0x00001204U
setmask 0xF8000774U 0x00003FFFU 0x00001205U
setmask 0xF8000778U 0x00003FFFU 0x00001204U
setmask 0xF800077CU 0x00003FFFU 0x00001205U
setmask 0xF8000780U 0x00003FFFU 0x00001204U
setmask 0xF8000784U 0x00003FFFU 0x00001204U
setmask 0xF8000788U 0x00003FFFU 0x00001204U
setmask 0xF800078CU 0x00003FFFU 0x00001204U
setmask 0xF8000790U 0x00003FFFU 0x00001205U
setmask 0xF8000794U 0x00003FFFU 0x00001204U
setmask 0xF8000798U 0x00003FFFU 0x00001204U
setmask 0xF800079CU 0x00003FFFU 0x00001204U
setmask 0xF80007B8U 0x00003FFFU 0x00001221U
setmask 0xF80007BCU 0x00003FFFU 0x00001220U
setmask 0xF80007C8U 0x00003FFFU 0x00001240U
setmask 0xF80007CCU 0x00003FFFU 0x00001240U
setmask 0xF80007D0U 0x00003FFFU 0x00001280U
setmask 0xF80007D4U 0x00003FFFU 0x00001280U
setmask 0xF8000830U 0x003F003FU 0x0000000FU

set *0xF8000004U = 0x0000767BU  # SLCR lock



####
# PLLs configurations
####

set *0xF8000008U = 0x0000DF0DU # SLCR unlock

# ARM Core
setmask 0xF8000110U 0x003FFFF0U 0x000FA220U # ARM_PLL_CFG : LOCK_CNT = 0xFA PLL_CP = 0x2 PLL_RES = 0x2   


setmask 0xF8000100U 0x0007F000U 0x00028000U # ARM_PLL_CTRL : PLL_FDIV = 0x28
#setmask 0xF8000100U 0x0007F000U 0x0003C000U # ARM_PLL_CTRL : PLL_FDIV = 0x28


setmask 0xF8000100U 0x00000010U 0x00000010U # ARM_PLL_CTRL : PLL_BYPASS_FORCE = 1
setmask 0xF8000100U 0x00000001U 0x00000001U # ARM_PLL_CTRL : PLL_RESET = 1
setmask 0xF8000100U 0x00000001U 0x00000000U # ARM_PLL_CTRL : PLL_RESET = 0
pause 100                                   # Wait for PLL to lock
setmask 0xF8000100U 0x00000010U 0x00000000U # ARM_PLL_CTRL : PLL_BYPASS_FORCE = 0
setmask 0xF8000120U 0x1F003F30U 0x1F000200U # ARM_CLK_CTRL : CPU_PERI_CLKACT = 0x1 CPU_1xCLKACT = 0x1 CPU_2xCLKACT = 0x1 CPU_3OR2xCLKACT = 0x1 CPU_6OR4xCLKACT = 0x1 DIVISOR = 0x2 SRCSEL = 0x0

# DDR Controller
setmask 0xF8000114U 0x003FFFF0U 0x0012C220U # DDR_PLL_CFG : LOCK_CNT = 0x12C PLL_CP = 0x2 PLL_RES = 0x2
setmask 0xF8000104U 0x0007F000U 0x00020000U # DDR_PLL_CTRL : PLL_FDIV = 0x20
setmask 0xF8000104U 0x00000010U 0x00000010U # DDR_PLL_CTRL : PLL_BYPASS_FORCE = 1
setmask 0xF8000104U 0x00000001U 0x00000001U # DDR_PLL_CTRL : PLL_RESET = 1
setmask 0xF8000104U 0x00000001U 0x00000000U # DDR_PLL_CTRL : PLL_RESET = 0
pause 100                                   # Wait for PLL to lock
setmask 0xF8000104U 0x00000010U 0x00000000U # DDR_PLL_CTRL : PLL_BYPASS_FORCE = 0
setmask 0xF8000124U 0xFFF00003U 0x0C200003U # DDR_CLK_CTRL : DDR_2xCLK_DIVISOR = 0x3 DDR_3xCLK_DIVISOR = 0x2 DDR_2xCLKACT = 0x1 DDR_3xCLKACT = 0x1

# IO
setmask 0xF8000118U 0x003FFFF0U 0x001452C0U # IO_PLL_CFG : LOCK_CNT = 0x145 PLL_CP = 0x2 PLL_RES = 0xC
setmask 0xF8000108U 0x0007F000U 0x0001E000U # IO_PLL_CTRL : PLL_FDIV = 0x1E
setmask 0xF8000108U 0x00000010U 0x00000010U # IO_PLL_CTRL : PLL_BYPASS_FORCE = 1
setmask 0xF8000108U 0x00000001U 0x00000001U # IO_PLL_CTRL : PLL_RESET = 1
setmask 0xF8000108U 0x00000001U 0x00000000U # IO_PLL_CTRL : PLL_RESET = 0
wait 100                                    # Wait for PLL to lock
setmask 0xF8000108U 0x00000010U 0x00000000U # IO_PLL_CTRL : PLL_BYPASS_FORCE = 0

set *0xF8000004U = 0x0000767BU  # SLCR lock


####
# Clocks configurations
####

set *0xF8000008U = 0x0000DF0DU # SLCR unlock

setmask 0xF8000128U 0x03F03F01U 0x00302301U # DCI_CLK_CTRL : DIVISOR1 = 0x3 DIVISOR0 = 0x23 CLKACT = 0x1
setmask 0xF800014CU 0x00003F31U 0x00000721U # LQSPI_CLK_CTRL : DIVISOR = 0x7 SRCSEL = 0x2 CLKACT = 0x1
setmask 0xF8000150U 0x00003F33U 0x00001401U # SDIO_CLK_CTRL : DIVISOR = 0x14 SRCSEL = 0x0 CLKACT1 = 0x0 CLKACT0 = 0x1
setmask 0xF8000154U 0x00003F33U 0x00001402U # UART_CLK_CTRL : DIVISOR = 0x14 SRCSEL = 0x0 CLKACT1 = 0x1 CLKACT0 = 0x0
setmask 0xF800015CU 0x03F03F33U 0x00300E01U # CAN_CLK_CTRL : DIVISOR1 = 0x3 DIVISOR0 = 0xE SRCSEL = 0x0 CLKACT1 = 0x0 CLKACT0 = 0x1
setmask 0xF8000160U 0x007F007FU 0x00000000U # CAN_MIOCLK_CTRL : CAN1_REF_SEL = 0x0 CAN1_MUx = 0x0 CAN0_REF_SEL = 0x0 CAN0_MUx = 0x0
setmask 0xF8000168U 0x00003F31U 0x00000501U # PCAP_CLK_CTRL : DIVISOR = 0x5 SRCSEL = 0x0 CLKACT = 0x1
setmask 0xF8000170U 0x03F03F30U 0x00101400U # FPGA0_CLK_CTRL : DIVISOR1 = 0x1 DIVISOR0 = 0x14 SRCSEL = 0x0
setmask 0xF8000180U 0x03F03F30U 0x00101400U # FPGA1_CLK_CTRL : DIVISOR1 = 0x1 DIVISOR0 = 0x14 SRCSEL = 0x0
setmask 0xF8000190U 0x03F03F30U 0x00101400U # FPGA2_CLK_CTRL : DIVISOR1 = 0x1 DIVISOR0 = 0x14 SRCSEL = 0x0
setmask 0xF80001A0U 0x03F03F30U 0x00101400U # FPGA3_CLK_CTRL : DIVISOR1 = 0x1 DIVISOR0 = 0x14 SRCSEL = 0x0
setmask 0xF80001C4U 0x00000001U 0x00000001U # CLK_621_TRUE : CLK_621_TRUE = 0x1
setmask 0xF800012CU 0x01FFCCCDU 0x01ED044DU # APER_CLK_CTRL : *lots of clock stuff*
setmask 0xF8000304U 0x00000001U 0x00000000U # WDT_CLK_SEL : SEL = 0x0

set *0xF8000004U = 0x0000767BU  # SLCR lock


####
# DDR Configuration
####

set *0xF8000008U = 0x0000DF0DU # SLCR unlock

setmask 0xF8006000U 0x0001FFFFU 0x00000080U
setmask 0xF8006004U 0x1FFFFFFFU 0x00081081U
setmask 0xF8006008U 0x03FFFFFFU 0x03C0780FU
setmask 0xF800600CU 0x03FFFFFFU 0x02001001U
setmask 0xF8006010U 0x03FFFFFFU 0x00014001U
setmask 0xF8006014U 0x001FFFFFU 0x0004159BU
setmask 0xF8006018U 0xF7FFFFFFU 0x452440D2U
setmask 0xF800601CU 0xFFFFFFFFU 0x720238E5U
setmask 0xF8006020U 0xFFFFFFFCU 0x27287290U
setmask 0xF8006024U 0x0FFFFFFFU 0x0000003CU
setmask 0xF8006028U 0x00003FFFU 0x00002007U
setmask 0xF800602CU 0xFFFFFFFFU 0x00000008U
setmask 0xF8006030U 0xFFFFFFFFU 0x00040930U
setmask 0xF8006034U 0x13FF3FFFU 0x00010694U
setmask 0xF8006038U 0x00001FC3U 0x00000000U
setmask 0xF800603CU 0x000FFFFFU 0x00000777U
setmask 0xF8006040U 0xFFFFFFFFU 0xFFF00000U
setmask 0xF8006044U 0x0FFFFFFFU 0x0F666666U
setmask 0xF8006048U 0x3FFFFFFFU 0x0003C248U
setmask 0xF8006050U 0xFF0F8FFFU 0x77010800U
setmask 0xF8006058U 0x0001FFFFU 0x00000101U
setmask 0xF800605CU 0x0000FFFFU 0x00005003U
setmask 0xF8006060U 0x000017FFU 0x0000003EU
setmask 0xF8006064U 0x00021FE0U 0x00020000U
setmask 0xF8006068U 0x03FFFFFFU 0x00284141U
setmask 0xF800606CU 0x0000FFFFU 0x00001610U
setmask 0xF80060A0U 0x00FFFFFFU 0x00008000U
setmask 0xF80060A4U 0xFFFFFFFFU 0x10200802U
setmask 0xF80060A8U 0x0FFFFFFFU 0x0690CB73U
setmask 0xF80060ACU 0x000001FFU 0x000001FEU
setmask 0xF80060B0U 0x1FFFFFFFU 0x1CFFFFFFU
setmask 0xF80060B4U 0x000007FFU 0x00000200U
setmask 0xF80060B8U 0x01FFFFFFU 0x00200066U
setmask 0xF80060BCU 0x00FFFFFFU 0x00000000U
setmask 0xF80060C4U 0x00000003U 0x00000000U
setmask 0xF80060C8U 0x000000FFU 0x00000000U
setmask 0xF80060DCU 0x00000001U 0x00000000U
setmask 0xF80060F0U 0x0000FFFFU 0x00000000U
setmask 0xF80060F4U 0x0000000FU 0x00000008U
setmask 0xF8006114U 0x000000FFU 0x00000000U
setmask 0xF8006118U 0x7FFFFFFFU 0x40000001U
setmask 0xF800611CU 0x7FFFFFFFU 0x40000001U
setmask 0xF8006120U 0x7FFFFFFFU 0x40000001U
setmask 0xF8006124U 0x7FFFFFFFU 0x40000001U
setmask 0xF800612CU 0x000FFFFFU 0x0003C81DU
setmask 0xF8006130U 0x000FFFFFU 0x00036012U
setmask 0xF8006134U 0x000FFFFFU 0x0003780CU
setmask 0xF8006138U 0x000FFFFFU 0x0003B821U
setmask 0xF8006140U 0x000FFFFFU 0x00000035U
setmask 0xF8006144U 0x000FFFFFU 0x00000035U
setmask 0xF8006148U 0x000FFFFFU 0x00000035U
setmask 0xF800614CU 0x000FFFFFU 0x00000035U
setmask 0xF8006154U 0x000FFFFFU 0x0000009DU
setmask 0xF8006158U 0x000FFFFFU 0x00000092U
setmask 0xF800615CU 0x000FFFFFU 0x0000008CU
setmask 0xF8006160U 0x000FFFFFU 0x000000A1U
setmask 0xF8006168U 0x001FFFFFU 0x00000147U
setmask 0xF800616CU 0x001FFFFFU 0x0000012DU
setmask 0xF8006170U 0x001FFFFFU 0x00000133U
setmask 0xF8006174U 0x001FFFFFU 0x00000143U
setmask 0xF800617CU 0x000FFFFFU 0x000000DDU
setmask 0xF8006180U 0x000FFFFFU 0x000000D2U
setmask 0xF8006184U 0x000FFFFFU 0x000000CCU
setmask 0xF8006188U 0x000FFFFFU 0x000000E1U
setmask 0xF8006190U 0xFFFFFFFFU 0x10040080U
setmask 0xF8006194U 0x000FFFFFU 0x0001FC82U
setmask 0xF8006204U 0xFFFFFFFFU 0x00000000U
setmask 0xF8006208U 0x000F03FFU 0x000803FFU
setmask 0xF800620CU 0x000F03FFU 0x000803FFU
setmask 0xF8006210U 0x000F03FFU 0x000803FFU
setmask 0xF8006214U 0x000F03FFU 0x000803FFU
setmask 0xF8006218U 0x000F03FFU 0x000003FFU
setmask 0xF800621CU 0x000F03FFU 0x000003FFU
setmask 0xF8006220U 0x000F03FFU 0x000003FFU
setmask 0xF8006224U 0x000F03FFU 0x000003FFU
setmask 0xF80062A8U 0x00000FF7U 0x00000000U
setmask 0xF80062ACU 0xFFFFFFFFU 0x00000000U
setmask 0xF80062B0U 0x003FFFFFU 0x00005125U
setmask 0xF80062B4U 0x0003FFFFU 0x000012A8U
setmask 0xF8006000U 0x0001FFFFU 0x00000081U
pause 500

set *0xF8000004U = 0x0000767BU  # SLCR lock



####
# Periph Configuration
####

set *0xF8000008U = 0x0000DF0DU # SLCR unlock

setmask 0xE0001034U 0x000000FFU 0x00000006U
setmask 0xE0001018U 0x0000FFFFU 0x0000003EU
setmask 0xE0001000U 0x000001FFU 0x00000017U
setmask 0xE0001004U 0x00000FFFU 0x00000020U
setmask 0xE000D000U 0x00080000U 0x00080000U
setmask 0xF8007000U 0x20000000U 0x00000000U
setmask 0xE000A204U 0xFFFFFFFFU 0x00002880U
setmask 0xE000A000U 0xFFFFFFFFU 0xFF7F0080U
setmask 0xE000A208U 0xFFFFFFFFU 0x00002880U
setmask 0xE000A000U 0xFFFFFFFFU 0xFF7F0000U
setmask 0xE000A000U 0xFFFFFFFFU 0xFF7F0080U
setmask 0xE000A204U 0xFFFFFFFFU 0x00002880U
setmask 0xE000A000U 0xFFFFFFFFU 0xF7FF0800U
setmask 0xE000A208U 0xFFFFFFFFU 0x00002880U
setmask 0xE000A000U 0xFFFFFFFFU 0xF7FF0000U
setmask 0xE000A000U 0xFFFFFFFFU 0xF7FF0800U
setmask 0xE000A204U 0xFFFFFFFFU 0x00002880U
setmask 0xE000A000U 0xFFFFFFFFU 0xDFFF2000U
setmask 0xE000A208U 0xFFFFFFFFU 0x00002880U
setmask 0xE000A000U 0xFFFFFFFFU 0xDFFF0000U
setmask 0xE000A000U 0xFFFFFFFFU 0xDFFF2000U 

set *0xF8000004U = 0x0000767BU  # SLCR lock


####
# OCM Configuration
####

set *0xF8000008U = 0x0000DF0DU # SLCR unlock

setmask 0xF8000910U 0x000000FFU 0x00000018U # Map 192k of OCRAM at 0x00000000 and 64k at 0xFFFF0000
 
set *0xF8000004U = 0x0000767BU # SLCR lock

